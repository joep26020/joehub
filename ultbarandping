local cfg = _G.Config or {}

local AntiDeathCounter    = cfg.AntiDeathCounter
local AntiDeathCounterSpy = cfg.AntiDeathCounterSpy
local UltBar              = cfg.UltBar
local PingBar             = cfg.PingBar
local LeaderboardSpy      = cfg.LeaderboardSpy

local GUI_WIDTH_PX        = 95
local GUI_HEIGHT_PX       = 33
local BASE_HEIGHT         = 2.4
local DEAD_ZONE           = 20
local LIFT_PER_STUD       = 0.03
local MAX_LIFT            = 200
local FADE_NEAR           = 90
local FADE_FAR            = 100

local MEN_NUMBER          = 10
local MEN_RADIUS_MIN, MEN_RADIUS_MAX = 1.5, 4  
local MEN_JITTER_AMT      = 0.06
local MEN_SPAWN_Y_MIN     = -0.5
local MEN_SPAWN_Y_MAX     = 2.4
local MEN_HOP_OFFSET      = 0.9
local MEN_HOP_TIME        = 0.08
local MEN_DROP_DIST       = -4
local MEN_DROP_TIME       = 0.6
local MEN_LIFE_SECONDS    = 10
local MEN_SCALE_MIN, MEN_SCALE_MAX = 0.90, 1.20

local TELEPORT_ANIMATION_ID   = "rbxassetid://11343250001"
local BASEPLATE_SIZE         = Vector3.new(2048,4,2048)
local BASEPLATE_Y_DEFAULT    = -496
local TELEPORT_HEIGHT_OFFSET = 4.25
local BACK_TELEPORT_RADIUS   = 50
local MIN_TELEPORT_DURATION  = 3

local Players      = game:GetService("Players")
local RunService   = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Replicated   = game:GetService("ReplicatedStorage")

local LP           = Players.LocalPlayer
local Camera       = workspace.CurrentCamera
local MenacingTemplate = Replicated:WaitForChild("Resources")
    :WaitForChild("LegacyReplication")
    :WaitForChild("Menacing")


local conns, headGuis, lastTKF = {}, {}, {}
local function addConn(c) if c then table.insert(conns, c) end end


local function comma(n)
    local s, k = tostring(n), nil
    repeat s, k = s:gsub("^(-?%d+)(%d%d%d)", "%1,%2") until k == 0
    return s
end

local function pingColor(ms)
    if     ms <= 60  then return Color3.fromRGB( 46,204,113)
    elseif ms <= 80  then return Color3.fromRGB(171,204, 46)
    elseif ms <= 100 then return Color3.fromRGB(241,196, 15)
    elseif ms <= 140 then return Color3.fromRGB(230,126, 34)
    else                 return Color3.fromRGB(192, 57, 43) end
end

local function getStatLabel(plr, stat)
    local root = game:GetService("CoreGui"):FindFirstChild("PlayerList", true)
    local row  = root and root:FindFirstChild("p_"..plr.UserId, true)
    local g    = row  and row:FindFirstChild("GameStat_"..stat, true)
    local ov   = g    and g:FindFirstChild("OverlayFrame", true)
    return ov and ov:FindFirstChild("StatText", true)
end

local function lerp(c1, c2, t)
    return Color3.new(
        c1.R + (c2.R-c1.R)*t,
        c1.G + (c2.G-c1.G)*t,
        c1.B + (c2.B-c1.B)*t
    )
end

local function fadeFactor(d)
    if d <= FADE_NEAR then return 0 end
    if d >= FADE_FAR  then return 1 end
    return (d - FADE_NEAR) / (FADE_FAR - FADE_NEAR)
end

local hiddenKills = {}

local function clearReveal(plr)
    local kl = getStatLabel(plr, "Kills")
    local tl = getStatLabel(plr, "Total Kills")
	if kl and plr:FindFirstChild("Kills") then
		kl.Text = comma(plr.Kills.Value)
	end
	if tl and plr:FindFirstChild("Total Kills") then
		tl.Text = comma(plr["Total Kills"].Value)
	end
end

local reveal, trackTKF

if Config.LeaderboardSpy then
	
	reveal = function(plr)
		if plr:GetAttribute("S_HideKills") ~= true then return end
		local kl = getStatLabel(plr, "Kills")
		local tl = getStatLabel(plr, "Total Kills")
		local kv = plr:FindFirstChild("Kills")
		local tv = plr:FindFirstChild("Total Kills")
		if kl and kv then
			kl.Text = "🔍 "..comma(kv.Value)
		end
		if tl and tv then
			tl.Text = "🔍 "..comma(tv.Value)
		end
	end



	trackTKF = function(plr)
		lastTKF[plr] = plr:GetAttribute("TotalKillsFrb") or 0
		addConn(plr:GetAttributeChangedSignal("TotalKillsFrb"):Connect(function()
			local new = plr:GetAttribute("TotalKillsFrb") or 0
			local diff = new - (lastTKF[plr] or 0)
			if diff > 0 then
				local kv = plr:FindFirstChild("Kills")
				if kv then kv.Value = kv.Value + diff end
			end
			lastTKF[plr] = new 
            if plr:GetAttribute("S_HideKills") == true then 
                reveal(plr) 
            end
		end))
	end
else
    reveal = function() end
    trackTKF = function() end
end

local mkGui, updGui

if Config.PingBar or Config.UltBar then
    local DARK_BLUE = Color3.fromRGB(  0, 80,220)
    local CYAN_BASE = Color3.fromRGB( 80,255,255)
    local CYAN_PEAK = Color3.fromRGB(150,255,255)
    local RED_LOW   = Color3.fromRGB(180, 20, 20)
    local RED_HIGH  = Color3.fromRGB(255, 60, 60)
    local HEAD_UI_MAX_DIST = 9999

    mkGui = function(char)
        local head = char:FindFirstChild("Head") or char:WaitForChild("Head",2)
        if not head then return end
        if head:FindFirstChild("_StatGui") then head._StatGui:Destroy() end

        local gui = Instance.new("BillboardGui", head)
        gui.Name        = "_StatGui"
        gui.Adornee     = head
        gui.Size        = UDim2.new(0, GUI_WIDTH_PX, 0, GUI_HEIGHT_PX)
        gui.MaxDistance = HEAD_UI_MAX_DIST
        gui.AlwaysOnTop = true
        gui.StudsOffset = Vector3.new(0, BASE_HEIGHT, 0)

 
        local ping = Instance.new("TextLabel", gui)
        ping.Name            = "PingLabel"
        ping.AnchorPoint     = Vector2.new(0.5, 0)
        ping.Position        = UDim2.new(0.5, 0, 0, 0)
        ping.Size            = UDim2.new(1,0,0.6,0)
        ping.BackgroundTransparency = 1
        ping.Font            = Enum.Font.ArialBold
        ping.TextScaled      = true
        local pStroke = Instance.new("UIStroke", ping)
        pStroke.Color   = Color3.new(0,0,0)
        pStroke.Thickness = 1

  
        local back = Instance.new("Frame", gui)
        back.Name             = "UltBackground"
        back.AnchorPoint      = Vector2.new(0.5,0)
        back.Position         = UDim2.new(0.5, 0, 0.65, 0)
        back.Size             = UDim2.new(0.9,0,0.25,0)
        back.BackgroundColor3 = Color3.fromRGB(60,60,60)
        back.BorderSizePixel  = 0
        local bStroke = Instance.new("UIStroke", back)
        bStroke.Color   = Color3.new(0,0,0)
        bStroke.Thickness = 1
		local backCorner = Instance.new("UICorner", back)
    	backCorner.CornerRadius = UDim.new(1, 0)


		local bar = Instance.new("Frame", back)
		bar.Name            = "UltFill"
		bar.Size            = UDim2.new(0, 0, 1, 0)
		bar.BorderSizePixel = 0
		local barCorner = Instance.new("UICorner", bar)
		barCorner.CornerRadius = UDim.new(1, 0)

		local glow = Instance.new("UIStroke", bar)
		glow.Thickness    = 3
		glow.Transparency = 0.3
		glow.Enabled      = false


        headGuis[char] = {
            gui     = gui,
            ping    = ping,   pStroke = pStroke,
            back    = back,   bStroke = bStroke,
            bar     = bar,    glow    = glow
        }
    end

	updGui = function(plr, char)
		local h = headGuis[char]
		if not h then return end


		if Config.PingBar then
			local ms = plr:GetAttribute("Ping") or 0
			h.ping.Text       = ("%d ms"):format(ms)
			h.ping.TextColor3 = pingColor(ms)
			h.ping.Visible    = true
			h.pStroke.Enabled = true
		else
			h.ping.Text       = ""
			h.ping.Visible    = false
			h.pStroke.Enabled = false
		end


		h.back.Visible    = Config.UltBar
		h.bStroke.Enabled = Config.UltBar
		h.bar.Visible     = Config.UltBar
		h.glow.Enabled    = false

		if Config.UltBar then
			local pct   = math.clamp(plr:GetAttribute("Ultimate") or 0, 0, 100)
			local live  = workspace:FindFirstChild("Live")
			local lc    = live and live:FindFirstChild(char.Name)
			local ulted = lc and lc:GetAttribute("Ulted") == true
			local pulse = (math.sin(os.clock()*math.pi*4) + 1) / 2

			if ulted then
				h.bar.Size             = UDim2.new(1,0,1,0)
				h.bar.BackgroundColor3 = lerp(RED_LOW, RED_HIGH, pulse)
				h.glow.Color           = h.bar.BackgroundColor3
				h.glow.Enabled         = true
			elseif pct >= 100 then
				h.bar.Size             = UDim2.new(1,0,1,0)
				h.bar.BackgroundColor3 = lerp(CYAN_BASE, CYAN_PEAK, pulse)
				h.glow.Color           = h.bar.BackgroundColor3
				h.glow.Enabled         = true
			else
				h.bar.Size             = UDim2.new(pct/100,0,1,0)
				h.bar.BackgroundColor3 = DARK_BLUE
			end
		end


		if not Config.UltBar then
			h.ping.AnchorPoint = Vector2.new(0.5, 0)
			h.ping.Position    = UDim2.new(0.5, 0, 0.25, 0)
		else
			h.ping.AnchorPoint = Vector2.new(0.5, 0)
			h.ping.Position    = UDim2.new(0.5, 0, 0,    0)
		end


		local root = char.PrimaryPart
				or char:FindFirstChild("HumanoidRootPart")
				or char:FindFirstChild("Head")
		if root then
	
			local camPos  = workspace.CurrentCamera.CFrame.Position
			local camDist = (camPos - root.Position).Magnitude
			local extra   = 0
			if camDist > DEAD_ZONE then
				extra = math.clamp((camDist - DEAD_ZONE) * LIFT_PER_STUD, 0, MAX_LIFT)
			end
			h.gui.StudsOffset = Vector3.new(0, BASE_HEIGHT + extra, 0)


			local lpRoot = LP.Character and LP.Character:FindFirstChild("HumanoidRootPart")
			if lpRoot then
				local playerDist = (lpRoot.Position - root.Position).Magnitude
				local t = fadeFactor(playerDist)
				h.ping.TextTransparency       = t
				h.pStroke.Transparency        = t
				h.bar.BackgroundTransparency  = t
				h.glow.Transparency           = 0.3 + 0.7 * t
				h.back.BackgroundTransparency = t
				h.bStroke.Transparency        = t
			end
		end
	end
else
    mkGui  = function() end
    updGui = function() end
end



if Config.AntiDeathCounterSpy then
    local liveFolder = workspace:WaitForChild("Live")

    local function highlightFor10sec(model)
        local hl = Instance.new("Highlight")
        hl.FillColor          = Color3.fromRGB(255, 0, 0)
        hl.FillTransparency   = 0.25
        hl.OutlineColor       = Color3.fromRGB(255, 0, 0)
        hl.OutlineTransparency = 0.5
        hl.DepthMode          = Enum.HighlightDepthMode.AlwaysOnTop
        hl.Parent             = model
        task.delay(10, function() if hl and hl.Parent then hl:Destroy() end end)
    end
    local function spawnDeathCounterEffects(liveChar)
        local hrp = liveChar:FindFirstChild("HumanoidRootPart") or liveChar:WaitForChild("HumanoidRootPart", 2)
        if not hrp then return end
        local folder = Instance.new("Folder", hrp)
        folder.Name = "_MenacingVFX"
        local clones = {}
        for i = 1, MEN_NUMBER do
            local gui = MenacingTemplate:Clone()
            gui.Parent                  = folder
            gui.Enabled                 = true
            gui.AlwaysOnTop             = false
            gui.Adornee                 = hrp
            local s = math.random() * (MEN_SCALE_MAX - MEN_SCALE_MIN) + MEN_SCALE_MIN
            gui.Size                    = UDim2.new(s,0,s,0)
			local ang = math.rad((360/MEN_NUMBER)*i + math.random()*20)
			local r   = math.random()*(MEN_RADIUS_MAX - MEN_RADIUS_MIN) + MEN_RADIUS_MIN
			local base = Vector3.new(math.cos(ang),0,math.sin(ang))*r
            local yOff = math.random()*(MEN_SPAWN_Y_MAX-MEN_SPAWN_Y_MIN)+MEN_SPAWN_Y_MIN
            gui.StudsOffsetWorldSpace   = base + Vector3.new(0,yOff,0)
            local img = gui:FindFirstChildOfClass("ImageLabel")
            if img then img.Visible=true img.ImageTransparency=0 img.BackgroundTransparency=1 end
            table.insert(clones, {gui=gui, img=img})
        end
        local startTime, idx = tick(), 1
        local conn
        conn = RunService.RenderStepped:Connect(function()
            local t = tick() - startTime
            for _, c in ipairs(clones) do
                if c.gui.Parent then
                    c.gui.StudsOffsetWorldSpace += Vector3.new(
                        (math.random()-0.5)*MEN_JITTER_AMT,
                        (math.random()-0.5)*MEN_JITTER_AMT,
                        (math.random()-0.5)*MEN_JITTER_AMT
                    )
                end
            end
            if idx <= MEN_NUMBER and t >= idx then
                local c = clones[idx]
                idx = idx + 1
                local g, img = c.gui, c.img
                local initial = g.StudsOffsetWorldSpace
                local upPos   = initial + Vector3.new(0, MEN_HOP_OFFSET, 0)
                local downPos = initial + Vector3.new(0, MEN_HOP_OFFSET + MEN_DROP_DIST, 0)
                local hop  = TweenService:Create(g, TweenInfo.new(MEN_HOP_TIME,  Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {StudsOffsetWorldSpace = upPos})
                local fall = TweenService:Create(g, TweenInfo.new(MEN_DROP_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {StudsOffsetWorldSpace = downPos})
                if img then
                    local fade = TweenService:Create(img, TweenInfo.new(MEN_HOP_TIME+MEN_DROP_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {ImageTransparency = 1})
                    fade:Play()
                end
                hop.Completed:Connect(function() fall:Play() end)
                fall.Completed:Connect(function() g:Destroy() end)
                hop:Play()
            end
            if t > MEN_LIFE_SECONDS + MEN_HOP_TIME + MEN_DROP_TIME then
                conn:Disconnect()
                if folder and folder.Parent then folder:Destroy() end
            end
        end)
    end


    local function hookDeathCounter(liveModel)

		if liveModel.Name == LP.Name then
			return
		end
        local function fireVFX()
            highlightFor10sec(liveModel)
            spawnDeathCounterEffects(liveModel)
        end

        if liveModel:FindFirstChild("Counter") then fireVFX() end

        addConn(liveModel.ChildAdded:Connect(function(child)
            if child.Name == "Counter" then fireVFX() end
        end))


        local humanoid = liveModel:FindFirstChildOfClass("Humanoid") or liveModel:WaitForChild("Humanoid",2)
        local animator = humanoid:FindFirstChildOfClass("Animator") or humanoid:WaitForChild("Animator",2)
        addConn(animator.AnimationPlayed:Connect(function(track)
            if track.Animation and track.Animation.AnimationId == "rbxassetid://11343318134" then
      
                for _, d in ipairs(liveModel:GetDescendants()) do
                    if d:IsA("Highlight") then d:Destroy() end
                end
            
                local hrp = liveModel:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local vfx = hrp:FindFirstChild("_MenacingVFX")
                    if vfx then vfx:Destroy() end
                end
            end
        end))
    end


    for _, lm in ipairs(liveFolder:GetChildren()) do
        hookDeathCounter(lm)
    end
    addConn(liveFolder.ChildAdded:Connect(hookDeathCounter))
end


if Config.AntiDeathCounter then
    do
        local player = LP
        local baseplate, isTeleporting, teleportStart, originalCFrame

        local function createBaseplate(pos)
            if baseplate then baseplate:Destroy() end
            baseplate = Instance.new("Part", workspace)
            baseplate.Name = "AntiDeathBaseplate"
            baseplate.Size = BASEPLATE_SIZE
            baseplate.Anchored = true
            baseplate.CanCollide = true
            baseplate.Position = Vector3.new(pos.X, BASEPLATE_Y_DEFAULT - BASEPLATE_SIZE.Y/2, pos.Z)
        end

        local function anyPlayersNearby(pos)
            for _, pl in ipairs(Players:GetPlayers()) do
                if pl ~= player and pl.Character then
                    local hrp = pl.Character:FindFirstChild("HumanoidRootPart")
                    if hrp and (hrp.Position - pos).Magnitude <= BACK_TELEPORT_RADIUS then
                        return true
                    end
                end
            end
            return false
        end

        local function restoreCameraAndCleanup()
            workspace.CurrentCamera:Destroy()
            wait(0.1)
            repeat wait() until player.Character and player.Character:FindFirstChildWhichIsA("Humanoid")
            local cam = workspace.CurrentCamera
            cam.CameraSubject = player.Character:FindFirstChildWhichIsA("Humanoid")
            cam.CameraType = Enum.CameraType.Custom
            player.CameraMinZoomDistance = 0.5
            player.CameraMaxZoomDistance = 400
            player.CameraMode = Enum.CameraMode.Classic
            if player.Character.Head then
                player.Character.Head.Anchored = false
            end
        end

        local function onCharacter(char)
	    if baseplate then baseplate:Destroy(); baseplate = nil end
	    isTeleporting   = false
	    teleportStart   = nil
	    originalCFrame  = nil
            local hum = char:WaitForChild("Humanoid", 2)
            local hrp = char:WaitForChild("HumanoidRootPart", 2)
            local animator = hum:FindFirstChildOfClass("Animator") or hum:WaitForChild("Animator", 2)
            animator.AnimationPlayed:Connect(function(track)
                if track.Animation and track.Animation.AnimationId == TELEPORT_ANIMATION_ID and not isTeleporting then
                    isTeleporting = true
                    originalCFrame = hrp.CFrame
                    createBaseplate(hrp.Position)
                    teleportStart = tick()
                    local conn
                    conn = RunService.Heartbeat:Connect(function()
                        if not hrp.Parent then conn:Disconnect() return end
                        hrp.CFrame = CFrame.new(baseplate.Position + Vector3.new(0, TELEPORT_HEIGHT_OFFSET, 0))
                        if tick() - teleportStart >= MIN_TELEPORT_DURATION and not anyPlayersNearby(hrp.Position) then
                            conn:Disconnect()
                            hrp.CFrame = originalCFrame
                            restoreCameraAndCleanup()
                            if baseplate then baseplate:Destroy() baseplate = nil end
                            isTeleporting = false
                        end
                    end)
                end
            end)
        end

        player.CharacterAdded:Connect(onCharacter)
        if player.Character then onCharacter(player.Character) end
    end
end

local function attachPlayer(plr)
    if plr == LP then
        addConn(plr.CharacterAdded:Connect(function(c)
            c:WaitForChild("Humanoid",4).NameDisplayDistance   = 100
            c:WaitForChild("Humanoid",4).HealthDisplayDistance = 100
        end))
        if plr.Character then
            local c = plr.Character
            c:WaitForChild("Humanoid",4).NameDisplayDistance   = 100
            c:WaitForChild("Humanoid",4).HealthDisplayDistance = 100
        end
        return
    end

	if Config.LeaderboardSpy and (plr:FindFirstChild("Kills") or plr:FindFirstChild("Total Kills")) then
		if plr:GetAttribute("S_HideKills") == true then
			reveal(plr)
		end
		trackTKF(plr)

		-- track initial state
		if plr:GetAttribute("S_HideKills") == true then
			hiddenKills[plr] = true
		end

		addConn(plr:GetAttributeChangedSignal("S_HideKills"):Connect(function()
		    if plr:GetAttribute("S_HideKills") then        
		        hiddenKills[plr] = true
		        reveal(plr)
		    else                                        
		        hiddenKills[plr] = nil
		        clearReveal(plr)
		    end
		end))

	end

    if Config.PingBar or Config.UltBar then
        local function onChar(char)
            if Config.PingBar or Config.UltBar then
                mkGui(char)
                updGui(plr, char)
            end
        end
        if plr.Character then onChar(plr.Character) end
        addConn(plr.CharacterAdded:Connect(onChar))

        if Config.PingBar then
            addConn(plr:GetAttributeChangedSignal("Ping"):Connect(function()
                if plr.Character then updGui(plr, plr.Character) end
            end))
        end
        if Config.UltBar then
            addConn(plr:GetAttributeChangedSignal("Ultimate"):Connect(function()
                if plr.Character then updGui(plr, plr.Character) end
            end))
        end

        addConn(RunService.Heartbeat:Connect(function()
            if plr.Character and (Config.PingBar or Config.UltBar) then
                updGui(plr, plr.Character)
            end
        end))
    end
    addConn(plr.AncestryChanged:Connect(function(_,parent)
        if not parent then lastTKF[plr] = nil end
    end))
end

for _, p in ipairs(Players:GetPlayers()) do
    attachPlayer(p)
end
addConn(Players.PlayerAdded:Connect(function(p)
    attachPlayer(p)
end))

if Config.LeaderboardSpy then
    addConn(RunService.Heartbeat:Connect(function()
	for _, plr in ipairs(Players:GetPlayers()) do
	    if plr ~= LP then
	        local hidden = plr:GetAttribute("S_HideKills")
	        if hidden then
	            if not hiddenKills[plr] then
	                hiddenKills[plr] = true
	                trackTKF(plr)
	            end
	            reveal(plr)
	        else
	            if hiddenKills[plr] then
	                hiddenKills[plr] = nil
	            end
	            clearReveal(plr)      -- ALWAYS make sure the icon is gone
	        end
	    end
	end
    end))
end



do
    local UserInputService = game:GetService("UserInputService")
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name   = "_StatScriptSettings"
	screenGui.ResetOnSpawn = false     
    screenGui.Parent = LP:WaitForChild("PlayerGui")

    local HEADER_HEIGHT    = 60
    local BTN_HEIGHT       = 23
    local TOGGLE_COUNT     = 5
    local TOGGLES_HEIGHT   = TOGGLE_COUNT*36 + 12 + BTN_HEIGHT
    local COLLAPSED_HEIGHT = HEADER_HEIGHT + BTN_HEIGHT
    local OPEN_HEIGHT      = HEADER_HEIGHT + BTN_HEIGHT + TOGGLES_HEIGHT

    local panel = Instance.new("Frame", screenGui)
    panel.Name             = "SettingsPanel"
    panel.Size             = UDim2.new(0,240,0,COLLAPSED_HEIGHT)
    panel.Position         = UDim2.new(0,8,0.5,-COLLAPSED_HEIGHT/2)
    panel.BackgroundColor3 = Color3.fromRGB(40,40,40)
    panel.ClipsDescendants = true
    Instance.new("UICorner", panel).CornerRadius = UDim.new(0,8)

    local dragBar = Instance.new("Frame", panel)
    dragBar.Name             = "DragBar"
    dragBar.Size             = UDim2.new(1,0,0,28)
    dragBar.Position         = UDim2.new(0,0,0,0)
    dragBar.BackgroundColor3 = Color3.fromRGB(60,60,60)
    Instance.new("UICorner", dragBar).CornerRadius = UDim.new(0,6)

    local icon = Instance.new("TextLabel", dragBar)
    icon.Size               = UDim2.new(1,0,1,0)
    icon.BackgroundTransparency = 1
    icon.Text               = "≡"
    icon.Font               = Enum.Font.SourceSansBold
    icon.TextSize           = 20
    icon.TextColor3         = Color3.new(1,1,1)
    icon.TextScaled         = true

    local dragging, dragStart, startPos
    dragBar.InputBegan:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging  = true
            dragStart = inp.Position
            startPos  = panel.Position
            inp.Changed:Connect(function()
                if inp.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    dragBar.InputChanged:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = inp
        end
    end)
    UserInputService.InputChanged:Connect(function(inp)
        if dragging and inp.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = inp.Position - dragStart
            panel.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    local title = Instance.new("TextLabel", panel)
    title.Name               = "Title"
    title.Text               = "Made by Azacks"
    title.Font               = Enum.Font.SourceSansBold
    title.TextSize           = 25
    title.TextColor3         = Color3.new(1,1,1)
    title.BackgroundTransparency = 1
    title.Size               = UDim2.new(1,0,0,16)
    title.Position           = UDim2.new(0,0,0,28)
    title.TextYAlignment     = Enum.TextYAlignment.Top

    local openBtn = Instance.new("TextButton", panel)
    openBtn.Name             = "OpenBtn"
    openBtn.Text             = "OPEN"
    openBtn.Font             = Enum.Font.SourceSansBold
    openBtn.TextSize         = 18
    openBtn.Size             = UDim2.new(1,0,0,BTN_HEIGHT)
    openBtn.Position         = UDim2.new(0,0,0,HEADER_HEIGHT)
    openBtn.BackgroundColor3 = Color3.fromRGB(46,204,113)
    openBtn.TextColor3       = Color3.new(1,1,1)
    Instance.new("UICorner", openBtn).CornerRadius = UDim.new(0,6)

    local closeBtn = Instance.new("TextButton", panel)
    closeBtn.Name             = "CloseBtn"
    closeBtn.Text             = "CLOSE"
    closeBtn.Font             = Enum.Font.SourceSansBold
    closeBtn.TextSize         = 18
    closeBtn.Size             = UDim2.new(1,0,0,BTN_HEIGHT)
    closeBtn.Position         = UDim2.new(0,0,0,HEADER_HEIGHT)
    closeBtn.BackgroundColor3 = Color3.fromRGB(200,50,50)
    closeBtn.TextColor3       = Color3.new(1,1,1)
    closeBtn.Visible          = false
    Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0,6)

    local togglesFrame = Instance.new("Frame", panel)
    togglesFrame.Name              = "Toggles"
    togglesFrame.Size              = UDim2.new(1,0,0,TOGGLES_HEIGHT)
    togglesFrame.Position          = UDim2.new(0,0,0,HEADER_HEIGHT + BTN_HEIGHT)
    togglesFrame.BackgroundTransparency = 1
    togglesFrame.Visible           = false

    local toggleNames = {
        "AntiDeathCounter",
        "LeaderboardSpy",
        "AntiDeathCounterSpy",
        "UltBar",
        "PingBar",
    }
    local yOff = 0
    for _, name in ipairs(toggleNames) do
        local lbl = Instance.new("TextLabel", togglesFrame)
        lbl.Text               = name
        lbl.Font               = Enum.Font.SourceSans
        lbl.TextSize           = 18
        lbl.TextColor3         = Color3.new(1,1,1)
        lbl.BackgroundTransparency = 1
        lbl.Size               = UDim2.new(0.7,0,0,28)
        lbl.Position           = UDim2.new(0,12,0,yOff)

        local btn = Instance.new("TextButton", togglesFrame)
        btn.Size               = UDim2.new(0,60,0,28)
        btn.Position           = UDim2.new(1,-72,0,yOff)
        btn.Font               = Enum.Font.SourceSans
        btn.TextSize           = 18
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
        local function refreshToggle()
            btn.Text             = Config[name] and "On" or "Off"
            btn.BackgroundColor3 = Config[name]
                and Color3.fromRGB(46,204,113)
                or Color3.fromRGB(192,57,43)
        end
        btn.MouseButton1Click:Connect(function()
            Config[name] = not Config[name]
            refreshToggle()
        end)
        refreshToggle()
        yOff = yOff + 36
    end

    local killBtn = Instance.new("TextButton", togglesFrame)
    killBtn.Text               = "Kill Script"
    killBtn.Font               = Enum.Font.SourceSansBold
    killBtn.TextSize           = 18
    killBtn.Size               = UDim2.new(1,-24,0,32)
    killBtn.Position           = UDim2.new(0,12,0,yOff)
    killBtn.BackgroundColor3   = Color3.fromRGB(200,50,50)
    killBtn.TextColor3         = Color3.new(1,1,1)
    Instance.new("UICorner", killBtn).CornerRadius = UDim.new(0,6)
    killBtn.MouseButton1Click:Connect(function()
        for _, c in ipairs(conns) do pcall(function() c:Disconnect() end) end
        for _, v in pairs(headGuis) do if v.gui then v.gui:Destroy() end end
        screenGui:Destroy()
        script:Destroy()
    end)

    local function toggleOpen(state)
        panel.Size              = state
            and UDim2.new(0,240,0,OPEN_HEIGHT)
            or UDim2.new(0,240,0,COLLAPSED_HEIGHT)
        openBtn.Visible         = not state
        closeBtn.Visible        = state
        togglesFrame.Visible    = state
    end

    openBtn.MouseButton1Click:Connect(function() toggleOpen(true) end)
    closeBtn.MouseButton1Click:Connect(function() toggleOpen(false) end)
end
